/*! For license information please see main.71bfb8c99c37b5886ca9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/Page.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>y});var r=n("./node_modules/gsap/index.js"),i=n("./node_modules/normalize-wheel/index.js"),o=n.n(i),l=n("./node_modules/lodash/each.js"),s=n.n(l),a=n("./node_modules/prefix/index.js"),u=n.n(a);n("./app/animations/Title.js");function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){h(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function h(e,t,n){return(t=d(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,d(r.key),r)}}function d(e){var t=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===c(t)?t:String(t)}var y=function(){function e(t){var n=t.element,r=t.elements,i=t.id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.id=i,this.selector=n,this.selectorChildren=f(f({},r),{},{animationsTitles:'[data-animation="title"'}),this.transformPrefix=u()("transform"),console.log(this.transformPrefix),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}var t,n,i;return t=e,(n=[{key:"create",value:function(){var e=this;this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},s()(this.selectorChildren,(function(t,n){t instanceof window.HTMLElement||t instanceof window.NodeList||Array.isArray(t)?e.elements[n]=t:(e.elements[n]=document.querySelectorAll(t),0===e.elements[n].length?e.elements[n]=null:1===e.elements[n].length&&(e.elements[n]=document.querySelector(t))),console.log("elements: ",e.elements[n],t)})),this.createAnimations()}},{key:"show",value:function(){var e=this;return new Promise((function(t){e.animationIn=r.default.timeline(),e.animationIn.fromTo(e.element,{autoAlpha:0},{autoAlpha:1,onComplete:t}),e.animationIn.call((function(){e.addEventListeners(),t()}))}))}},{key:"hide",value:function(){var e=this;return new Promise((function(t){e.removeEventListeners(),e.animationOut=r.default.timeline(),e.animationOut.to(e.element,{autoAlpha:0,onComplete:t})}))}},{key:"onMouseWheel",value:function(e){var t=o()(e).pixelY;this.scroll.target+=t}},{key:"onResize",value:function(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight)}},{key:"update",value:function(){this.scroll.target=r.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=r.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]="translateY(-".concat(this.scroll.current,"px)"))}},{key:"addEventListeners",value:function(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}},{key:"removeEventListeners",value:function(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}}])&&p(t.prototype,n),i&&p(t,i),Object.defineProperty(t,"prototype",{writable:!1}),e}()}},(function(e){e.h=()=>"f2daf4b46e701008da10"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
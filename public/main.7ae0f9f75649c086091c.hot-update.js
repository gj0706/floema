/*! For license information please see main.7ae0f9f75649c086091c.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/Page.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>S});var i=n("./node_modules/gsap/index.js"),r=n("./node_modules/normalize-wheel/index.js"),o=n.n(r),a=n("./node_modules/prefix/index.js"),s=n.n(a),l=n("./node_modules/lodash/each.js"),u=n.n(l),c=n("./node_modules/lodash/map.js"),m=n.n(c),h=n("./app/animations/Highlight.js"),f=n("./app/animations/Title.js"),p=n("./app/animations/Paragraph.js"),d=n("./app/animations/Label.js");function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function b(e){return function(e){if(Array.isArray(e))return g(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return g(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return g(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function v(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function w(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?v(Object(n),!0).forEach((function(t){j(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):v(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function j(e,t,n){return(t=O(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function P(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,O(i.key),i)}}function O(e){var t=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==y(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===y(t)?t:String(t)}var S=function(){function e(t){var n=t.element,i=t.elements,r=t.id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.id=r,this.selector=n,this.selectorChildren=w(w({},i),{},{animationsHighlights:'[data-animation="highlight"]',animationsTitles:'[data-animation="title"]',animationsParagraphs:'[data-animation="paragraph"]',animationsLabels:'[data-animation="label"]'}),this.transformPrefix=s()("transform"),console.log(this.transformPrefix),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}var t,n,r;return t=e,(n=[{key:"create",value:function(){var e=this;this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},u()(this.selectorChildren,(function(t,n){t instanceof window.HTMLElement||t instanceof window.NodeList||Array.isArray(t)?e.elements[n]=t:(e.elements[n]=document.querySelectorAll(t),0===e.elements[n].length?e.elements[n]=null:1===e.elements[n].length&&(e.elements[n]=document.querySelector(t))),console.log("elements: ",e.elements[n],t)})),this.createAnimations()}},{key:"createAnimations",value:function(){var e;this.animations=[],this.animationsHighlights=m()(this.elements.animationsHighlights,(function(e){return new h.default({element:e})})),this.animationsTitles=m()(this.elements.animationsTitles,(function(e){return new f.default({element:e})})),this.animations.push(this.animationsTitles),this.animationsParagraphs=m()(this.elements.animationsParagraphs,(function(e){return new p.default({element:e})})),this.animations.push(this.animationsParagraphs),this.animationsLabels=m()(this.elements.animationsLabels,(function(e){return new d.default({element:e})})),(e=this.animations).push.apply(e,b(this.animationsLabels))}},{key:"show",value:function(){var e=this;return new Promise((function(t){e.animationIn=i.default.timeline(),e.animationIn.fromTo(e.element,{autoAlpha:0},{autoAlpha:1,onComplete:t}),e.animationIn.call((function(){e.addEventListeners(),t()}))}))}},{key:"hide",value:function(){var e=this;return new Promise((function(t){e.removeEventListeners(),e.animationOut=i.default.timeline(),e.animationOut.to(e.element,{autoAlpha:0,onComplete:t})}))}},{key:"onMouseWheel",value:function(e){var t=o()(e).pixelY;this.scroll.target+=t}},{key:"onResize",value:function(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),u()(this.animationsLabels,(function(e){e.onResize()})),u()(this.animationsTitles,(function(e){e.onResize()})),u()(this.animationsParagraphs,(function(e){e.onResize()})),u()(this.animationsHighlights,(function(e){e.onResize()}))}},{key:"update",value:function(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]="translateY(-".concat(this.scroll.current,"px)"))}},{key:"addEventListeners",value:function(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}},{key:"removeEventListeners",value:function(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}}])&&P(t.prototype,n),r&&P(t,r),Object.defineProperty(t,"prototype",{writable:!1}),e}()}},(function(e){e.h=()=>"8ffa099b73956d2e3c39"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
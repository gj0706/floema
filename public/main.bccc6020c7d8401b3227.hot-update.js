/*! For license information please see main.bccc6020c7d8401b3227.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/Page.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>v});var r=n("./node_modules/gsap/index.js"),i=n("./node_modules/normalize-wheel/index.js"),o=n.n(i),l=n("./node_modules/lodash/each.js"),s=n.n(l),a=n("./node_modules/prefix/index.js"),u=n.n(a),c=n("./app/animations/Title.js");function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function f(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?f(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t,n){return(t=y(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,y(r.key),r)}}function y(e){var t=function(e,t){if("object"!==m(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===m(t)?t:String(t)}var v=function(){function e(t){var n=t.element,r=t.elements,i=t.id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.id=i,this.selector=n,this.selectorChildren=h(h({},r),{},{animationsTitles:'[data-animation="title"'}),this.transformPrefix=u()("transform"),console.log(this.transformPrefix),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}var t,n,i;return t=e,(n=[{key:"create",value:function(){var e=this;this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},s()(this.selectorChildren,(function(t,n){t instanceof window.HTMLElement||t instanceof window.NodeList||Array.isArray(t)?e.elements[n]=t:(e.elements[n]=document.querySelectorAll(t),0===e.elements[n].length?e.elements[n]=null:1===e.elements[n].length&&(e.elements[n]=document.querySelector(t))),console.log("elements: ",e.elements[n],t)})),this.createAnimations()}},{key:"createAnimations",value:function(){console.log(this.elements.animationsTitles),this.animationsTitles=map(this.elements.animationsTitles,(function(e){return new c.default({element:e})}))}},{key:"show",value:function(){var e=this;return new Promise((function(t){e.animationIn=r.default.timeline(),e.animationIn.fromTo(e.element,{autoAlpha:0},{autoAlpha:1,onComplete:t}),e.animationIn.call((function(){e.addEventListeners(),t()}))}))}},{key:"hide",value:function(){var e=this;return new Promise((function(t){e.removeEventListeners(),e.animationOut=r.default.timeline(),e.animationOut.to(e.element,{autoAlpha:0,onComplete:t})}))}},{key:"onMouseWheel",value:function(e){var t=o()(e).pixelY;this.scroll.target+=t}},{key:"onResize",value:function(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight)}},{key:"update",value:function(){this.scroll.target=r.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=r.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]="translateY(-".concat(this.scroll.current,"px)"))}},{key:"addEventListeners",value:function(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}},{key:"removeEventListeners",value:function(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}}])&&d(t.prototype,n),i&&d(t,i),Object.defineProperty(t,"prototype",{writable:!1}),e}()}},(function(e){e.h=()=>"8ac97ce0e75d45f46e59"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
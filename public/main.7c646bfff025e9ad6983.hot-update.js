/*! For license information please see main.7c646bfff025e9ad6983.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Media.js":(e,t,i)=>{i.r(t),i.d(t,{default:()=>m});var s=i("./node_modules/gsap/index.js"),n=i("./node_modules/ogl/src/core/Texture.js"),o=i("./node_modules/ogl/src/core/Program.js"),h=i("./node_modules/ogl/src/core/Mesh.js"),r=i("./app/shaders/home-fragment.glsl"),a=i("./app/shaders/home-vertex.glsl");function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function l(e,t){for(var i=0;i<t.length;i++){var s=t[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,(n=s.key,o=void 0,o=function(e,t){if("object"!==u(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var s=i.call(e,t||"default");if("object"!==u(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(n,"string"),"symbol"===u(o)?o:String(o)),s)}var n,o}var m=function(){function e(t){var i=t.element,s=t.geometry,n=t.gl,o=t.index,h=t.scene,r=t.sizes;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.element=i,this.geometry=s,this.gl=n,this.index=o,this.scene=h,this.sizes=r,this.extra={x:0,y:0},this.createTexture(),this.createProgram(),this.createMesh(),this.createBounds({sizes:this.sizes})}var t,i,u;return t=e,i=[{key:"createTexture",value:function(){var e=this;this.texture=new n.Texture(this.gl),this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=this.element.getAttribute("data-src"),this.image.onload=function(){e.texture.image=e.image}}},{key:"createProgram",value:function(){this.program=new o.Program(this.gl,{fragment:r.default,vertex:a.default,uniforms:{tMap:{value:this.texture}}})}},{key:"createMesh",value:function(){this.mesh=new h.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene),this.mesh.scale.x=2,this.mesh.position.x+=this.index*this.mesh.scale.x}},{key:"createBounds",value:function(e){var t=e.sizes;this.bounds=this.element.getBoundingClientRect(),this.updateScale(t),this.updateX(),this.updateY()}},{key:"show",value:function(e){var t=e?2.5:0;this.timelineIn=s.default.timeline({delay:s.default.utils.random(t,t+1.5)}),this.timelineIn.fromTo(this.program.uniforms.uAlpha,{value:0},{duration:2,ease:"expo.inOut",value:.4},"start"),this.timelineIn.fromTo(this.mesh.position,{z:s.default.utils.random(2,6)},{duration:2,ease:"expo.inOut",z:0},"start")}},{key:"hide",value:function(){}},{key:"onResize",value:function(e){this.createBounds(e)}},{key:"updateScale",value:function(e){var t=e.height,i=e.width;this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=i*this.width,this.mesh.scale.y=t*this.height,this.x=this.bounds.left/window.innerWidth,this.y=this.bounds.top/window.innerHeight,console.log("x ",this.x,"y ",this.y),this.mesh.position.x=-i/2+this.mesh.scale.x/2+this.x*i,this.mesh.position.y=t/2-this.mesh.scale.y/2-this.y*t,console.log("Mesh.position x : ",this.mesh.position.x)}},{key:"updateX",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.x=(this.bounds.left+e)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra.x}},{key:"updateY",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.y=(this.bounds.top+e)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height+this.extra.y}},{key:"update",value:function(e,t){this.updateX(),this.updateY(e.y),this.program.uniforms.uSpeed.value=t}}],i&&l(t.prototype,i),u&&l(t,u),Object.defineProperty(t,"prototype",{writable:!1}),e}()}},(function(e){e.h=()=>"596d0d78055c9ab19e90"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,